@page "/details/{id}"
@using APBDProject.Shared.Models
@using APBDProject.Shared.Models.DTOs
@using Microsoft.AspNetCore.Authorization
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Calendars

@attribute [Authorize]

@inject HttpClient Http





@if(stock==null)
{
    <a>...</a>
}else{
    <h1>@stock.name</h1>

<p>Ticker: @stock.ticker @stock.locale</p>
<p>@stock.description</p>
<p>Market:  @stock.market</p>
<p><a href ="@stock.homepage_url">@stock.homepage_url</a></p>

}



@if(prices==null)
{
    <p>...</p>
}
else
{

   <h3>Latest Close</h3>
        <p> Open : @prices.o</p>
        <p> High: @prices.h</p>
        <p> Low: @prices.l</p>
        <p> Close: @prices.c</p>
        <p> Volume: @prices.v</p>
    
}
@if (StockPrices.Count>1)
{

   @foreach(var p in StockPrices)
    {
        <p>@p.Date</p>
        <p>@p.o</p>
        <p>@p.h</p>
        <p>@p.l</p>
        <p>@p.c</p>
        <p>@p.v</p>
    }
  
    

   <SfStockChart Title = "Stock Chart">
    <StockChartSeriesCollection>
       
        <StockChartSeries DataSource="@StockPrices" Type="ChartSeriesType.Candle" XName="Date"  High="h" Low="l" Open="o" Close="c" Volume="v"></StockChartSeries>
    </StockChartSeriesCollection>
</SfStockChart>


}

@code{
    [Parameter]
    public string id { get; set; }

    public StockInfo stock { get; set; }
    public OHLC prices { get; set; }

    public List<StockPriceDate> StockPrices = new List<StockPriceDate>();
    public List<StockPriceDate> Prices2 = new List<StockPriceDate>();



    protected override async Task OnInitializedAsync()
    {
        try{
            StockPriceDate[] tabPrices = await Http.GetFromJsonAsync<StockPriceDate[]>($"api/stocks/prices/{id}");


           
                StockPrices.AddRange(tabPrices);
        }
        catch (Exception e)
        {

        }

      

        stock = await Http.GetFromJsonAsync<StockInfo>($"api/stocks/details/{id}");


        prices = await Http.GetFromJsonAsync<OHLC>($"api/stocks/previousclose/{id}");




        var postOHCL = new StockPriceDate
            {
                Date = DateTime.Now,
                o = prices.o,
                c = prices.c,
                h = prices.h,
                l = prices.l,
                v = prices.v
            };

        var postStock = new StockInfoOHLC
            {
                Prices = postOHCL,
                Stock = stock
            };


        var postStockInfo = await Http.PostAsJsonAsync<StockInfoOHLC>($"api/stocks", postStock);
    }
     public class StockChartData
    {
        public DateTime Date { get; set; }
        public double Open { get; set; }
        public double Low { get; set; }
        public double Close { get; set; }
        public double High { get; set; }
        public double Volume { get; set; }
    }

    public List<StockChartData> StockDetailss = new List<StockChartData>
    {
        new StockChartData { Date = new DateTime(2012, 04, 02), Open = 85.9757, High = 90.6657, Low = 85.7685, Close = 90.5257, Volume = 660187068},
        new StockChartData { Date = new DateTime(2012, 04, 09), Open = 89.4471, High = 92, Low = 86.2157, Close = 86.4614, Volume = 912634864},
        new StockChartData { Date = new DateTime(2012, 04, 16), Open = 87.1514, High = 88.6071, Low = 81.4885, Close = 81.8543, Volume = 1221746066},
        new StockChartData { Date = new DateTime(2012, 04, 23), Open = 81.5157, High = 88.2857, Low = 79.2857, Close = 86.1428, Volume = 965935749},
        new StockChartData { Date = new DateTime(2012, 04, 30), Open = 85.4, High =  85.4857, Low = 80.7385, Close = 80.75, Volume = 615249365},
        new StockChartData { Date = new DateTime(2012, 05, 07), Open = 80.2143, High = 82.2685, Low = 79.8185, Close = 80.9585, Volume = 541742692},
        new StockChartData { Date = new DateTime(2012, 05, 14), Open = 80.3671, High = 81.0728, Low = 74.5971, Close = 75.7685, Volume = 708126233},
        new StockChartData { Date = new DateTime(2012, 05, 21), Open = 76.3571, High = 82.3571, Low = 76.2928, Close = 80.3271, Volume = 682076215},
        new StockChartData { Date = new DateTime(2012, 05, 28), Open = 81.5571, High = 83.0714, Low = 80.0743, Close = 80.1414, Volume = 480059584},
    };



}