@page "/Watchlist"
@using APBDProject.Shared.Models
@using Microsoft.AspNetCore.Authorization


@attribute [Authorize]
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigationManager


<h3>Watchlist</h3>

@if(stocks == null)
{
    <p>...</p>
}
else
{
    <table style ="width: 100%; text-align : center">
        <thead>
            <tr>
                <th>Ticker</th> 
                <th>Locale</th>
                <th>Name</th>
                <th>Homepage</th>
                <th>Action</th>
                <th>Remove</th>
            </tr>
        </thead>
        <tbody >
            @foreach (var stock in stocks)
            {
                <tr>
                    
                    <td style = "border-top: 1px solid ">@stock.ticker</td> 
                    <td style = "border-top: 1px solid ">@stock.locale</td>
                    <td style = "border-top: 1px solid ">@stock.name</td>
                    <td style = "border-top: 1px solid "><a href = "@stock.homepage_url" target="_blank" >@stock.homepage_url</a></td>
                    <td style = "border-top: 1px solid "><button type="button" class="btn btn-info"  @onclick="@(() => { OpenDetails(stock.ticker); })">Details</button></td>
                    <td style = "border-top: 1px solid "><button type="button" class="btn btn-danger"   @onclick = "@(()=>RemoveStockFromWatchlist(stock))" >-</button></td> 
                   
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private StockInfo[] stocks;
    private string userID;
  

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        userID = authState.User.Identity.Name;
        stocks = await Http.GetFromJsonAsync<StockInfo[]>($"api/watchlist/{userID}");

    }

    private async Task RemoveStockFromWatchlist(StockInfo stock)
    {
       
           var delete = await Http.PostAsJsonAsync($"api/watchlist/delete/{userID}", stock);
           stocks = await Http.GetFromJsonAsync<StockInfo[]>($"api/watchlist/{userID}"); 

    }
      private void OpenDetails(string id)
    {
        navigationManager.NavigateTo($"/details/{id}");
    }

}
